"""
Author: Roy Goldstaub
Date: 1.12.23
Description:
"""
import logging
import glob
import os
import shutil
import subprocess
import pyautogui

logging.basicConfig(filename='technicianServer_log.log', level=logging.DEBUG)


def dir_com(file):
    """
    gives user list with stuff in directory
    :param file: the file path of the file requested to be examined
    :type: string
    :return: either the content of the file or an error message
    :rtype: string
    """
    try:
        new_file = file + '/*.*'
        dir_list = glob.glob(new_file)
        #file_dir = ', '.join(dir_list).replace('\\', '/')
        print(dir_list)
        logging.debug('Dir command was executed successfully')
    except FileNotFoundError:
        dir_list = 'Error'
        logging.error('Dir command has crashed')
    return dir_list


def del_com(file):
    """
        deletes file at given path
        :param file: the file path of the file requested to be deleted
        :type: string
        :return: either a success message or an error message
        :rtype: string
        """
    success = 'File was Deleted successfully'
    try:
        os.remove(file)
        logging.debug('Del command was executed successfully')
    except FileNotFoundError:
        success = 'Error'
        logging.error('Del command has crashed')
    return success


def copy_com(from_file, to_file):
    """
        copies file at from_dir to to_dir
        :param from_file: the file path of the file which is to be copied
        :type: string
        :param to_file: the file path of the file to bo copied to
        :type: string
        :return: either a success message or an error message
        :rtype: string
        """
    success = 'File was copied successfully'
    try:
        shutil.copy(from_file, to_file)
        logging.debug('Copy command was executed successfully')
    except shutil.Error:
        success = 'Error'
        logging.error('Copy command has crashed')
    return success


def execute_program(path):
    """
        runs program at path
        :param path: the file path of the program to be executed
        :type: string
        :return: either a success message or an error message
        :rtype: string
        """
    success = 'Program was executed successfully'
    try:
        subprocess.call(path)
        logging.debug('Open command was executed successfully')
    except OSError:
        success = 'Error'
        logging.error('Open command has crashed')
    except subprocess.CalledProcessError:
        success = 'Error'
        logging.error('Open command has crashed')
    return success


def screenshot():
    """
    runs program at path
    :return:
    """
    try:
        image = pyautogui.screenshot()
        image.save("c:/temp/screenshot/screenshot.jpg")
        return "SUCCEEd"
    except Exception as e:
        print("Exception:", e)
        return "ERROR"
